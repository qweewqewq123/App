using System;
using System.Collections.Generic;

// Класс, представляющий абонента
class Abonent
{
    public string Имя { get; set; }
    public string НомерТелефона { get; set; }
    public decimal ЗадолженностьАбонентская { get; set; }
    public decimal ЗадолженностьПовременная { get; set; }
}

// Класс, представляющий картотеку абонентов ATC
class КартотекаАбонентов
{
    private List<Abonent> абоненты;

    // Конструктор
    public КартотекаАбонентов()
    {
        абоненты = new List<Abonent>();
    }

    // Метод для добавления абонента
    public void ДобавитьАбонента(Abonent абонент)
    {
        абоненты.Add(абонент);
    }

    // Метод для удаления абонента
    public void УдалитьАбонента(Abonent абонент)
    {
        абоненты.Remove(абонент);
    }

    // Метод для обновления задолженности абонента
    public void ОбновитьЗадолженность(Abonent абонент, decimal абонентскаяОплата, decimal повременнаяОплата)
    {
        абонент.ЗадолженностьАбонентская += абонентскаяОплата;
        абонент.ЗадолженностьПовременная += повременнаяОплата;
    }

    // Метод для вывода информации о всех абонентах
    public void ВывестиИнформациюОАбонентах()
    {
        Console.WriteLine("Информация о всех абонентах:");
        foreach (var абонент in абоненты)
        {
            Console.WriteLine($"Имя: {абонент.Имя}, Номер телефона: {абонент.НомерТелефона}, Задолженность абонентская: {абонент.ЗадолженностьАбонентская}, Задолженность повременная: {абонент.ЗадолженностьПовременная}");
        }
    }
}

class Program
{
    static void Main(string[] args)
    {
        // Создание картотеки абонентов
        КартотекаАбонентов картотека = new КартотекаАбонентов();

        // Создание и добавление абонента
        Abonent абонент1 = new Abonent { Имя = "Иванов", НомерТелефона = "+76542343423", ЗадолженностьАбонентская = 0, ЗадолженностьПовременная = 0 };
        картотека.ДобавитьАбонента(абонент1);

        // Создание и добавление еще одного абонента
        Abonent абонент2 = new Abonent { Имя = "Петров", НомерТелефона = "+79674737120", ЗадолженностьАбонентская = 50, ЗадолженностьПовременная = 0 };
        картотека.ДобавитьАбонента(абонент2);

        // Вывод информации о всех абонентах
        картотека.ВывестиИнформациюОАбонентах();

        // Обновление задолженности абонентов
        картотека.ОбновитьЗадолженность(абонент1, 0, 25);
        картотека.ОбновитьЗадолженность(абонент2, 20, 10);

        // Вывод информации о всех абонентах после обновления задолженности
        картотека.ВывестиИнформациюОАбонентах();

        Console.ReadLine();
    }
}